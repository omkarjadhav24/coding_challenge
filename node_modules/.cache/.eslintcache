[{"/home/omkar/Work/coding-challange/src/index.js":"1","/home/omkar/Work/coding-challange/src/reportWebVitals.js":"2","/home/omkar/Work/coding-challange/src/App.js":"3","/home/omkar/Work/coding-challange/src/modules/Content/Content.js":"4","/home/omkar/Work/coding-challange/src/modules/Header/Header.js":"5","/home/omkar/Work/coding-challange/src/reducers.js":"6","/home/omkar/Work/coding-challange/src/modules/Footer/Footer.js":"7","/home/omkar/Work/coding-challange/src/modules/Login/Login.js":"8","/home/omkar/Work/coding-challange/src/modules/Login/LoginReducer.js":"9","/home/omkar/Work/coding-challange/src/modules/Login/LoginActions.js":"10","/home/omkar/Work/coding-challange/src/modules/Login/LoginApiActions.js":"11","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodAppPage/FoodAppPage.js":"12","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/Foodtem.js":"13","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemReducer.js":"14","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemActions.js":"15","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemApiActions.js":"16","/home/omkar/Work/coding-challange/src/modules/Cart/Cart.js":"17","/home/omkar/Work/coding-challange/src/modules/Checkout/Checkout.js":"18"},{"size":832,"mtime":1644585696509,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1644559687544,"results":"21","hashOfConfig":"20"},{"size":300,"mtime":1645001209439,"results":"22","hashOfConfig":"20"},{"size":1498,"mtime":1645001290975,"results":"23","hashOfConfig":"20"},{"size":3454,"mtime":1645094372209,"results":"24","hashOfConfig":"20"},{"size":280,"mtime":1644641107003,"results":"25","hashOfConfig":"20"},{"size":707,"mtime":1645093888140,"results":"26","hashOfConfig":"20"},{"size":2829,"mtime":1645093926504,"results":"27","hashOfConfig":"20"},{"size":581,"mtime":1644586484095,"results":"28","hashOfConfig":"20"},{"size":202,"mtime":1644573088512,"results":"29","hashOfConfig":"20"},{"size":212,"mtime":1645093944827,"results":"30","hashOfConfig":"20"},{"size":1638,"mtime":1644586951392,"results":"31","hashOfConfig":"20"},{"size":8252,"mtime":1645094070183,"results":"32","hashOfConfig":"20"},{"size":744,"mtime":1645002063249,"results":"33","hashOfConfig":"20"},{"size":412,"mtime":1645001971560,"results":"34","hashOfConfig":"20"},{"size":301,"mtime":1645002020712,"results":"35","hashOfConfig":"20"},{"size":7144,"mtime":1645002161373,"results":"36","hashOfConfig":"20"},{"size":1170,"mtime":1644652932265,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"a6euhg",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/home/omkar/Work/coding-challange/src/index.js",[],[],["105","106"],"/home/omkar/Work/coding-challange/src/reportWebVitals.js",[],[],["107","108"],"/home/omkar/Work/coding-challange/src/App.js",["109","110","111"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Content from './modules/Content/Content';\nimport Header from './modules/Header/Header';\nimport Login from './modules/Login/Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/omkar/Work/coding-challange/src/modules/Content/Content.js",[],[],["112","113"],"/home/omkar/Work/coding-challange/src/modules/Header/Header.js",["114"],[],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RestaurantRoundedIcon from '@material-ui/icons/RestaurantRounded';\nimport { Badge, Grid } from '@material-ui/core';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport Cart from '../Cart/Cart';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    headerName:{\n        marginLeft:'10px'\n    }\n  }));\n\n  \n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Header = ({foodItems }) => {\n\n    const [openCartDialogBox,setOpenCartDialogBox] = useState(false)\n\n    const openCartDialogBoxHandler  = () => {\n        setOpenCartDialogBox(!openCartDialogBox)\n    }\n\n    const classes = useStyles();\n    let cartItemsCount = foodItems && foodItems.filter((item)=>item.price > item.oldPrice)\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <RestaurantRoundedIcon />  <Typography className={classes.headerName}>Food's Restaurant</Typography>\n                    </IconButton>\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                        <Grid container justifyContent='flex-end'>\n                            <Grid className='cart-icon-grid'>\n                                {\n                                    cartItemsCount&&cartItemsCount.length !==0\n                                    ?\n                                    <Button color=\"inherit\" onClick={()=>{\n                                        openCartDialogBoxHandler()\n                                    }}>\n                                        <Badge badgeContent={cartItemsCount ? cartItemsCount.length:0} color=\"error\">\n                                            <ShoppingCartRoundedIcon style={{color:'black'}}/>\n                                        </Badge>\n                                    </Button>\n                                    :\n                                    <></>\n                                }\n                                \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            {\n                openCartDialogBox\n                ?\n                <Cart\n                open={openCartDialogBox}\n                closeDialogBox={()=>{\n                    setOpenCartDialogBox(!openCartDialogBox)\n                }}\n                />\n                :\n                <></>\n            }\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        foodItems:state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","/home/omkar/Work/coding-challange/src/reducers.js",[],[],["115","116"],"/home/omkar/Work/coding-challange/src/modules/Footer/Footer.js",["117"],[],"import React from 'react';\nimport { connect } from 'react-redux';\nimport './Footer.css'\nimport { Box, Typography } from '@material-ui/core';\n\n\n/**\n * Component to render Footer View\n * @returns {JSX.Element}\n * @constructor\n */\nconst Footer = ({ }) => {\n\n    return (\n        <Box component='footer' className='login-footer'>\n            <Typography className='login-footer-text'>\n                &copy; Food's Restaurant {new Date().getFullYear()}\n            </Typography>\n        </Box>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Footer);\n","/home/omkar/Work/coding-challange/src/modules/Login/Login.js",["118"],[],"import { Button, Grid, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Login.css'\nimport {\n    logInRequest\n} from './LoginApiActions'\nimport logInCredentials from '../logInCredentials.json'\nimport { useNavigate } from 'react-router-dom'\n\n\n/**\n * Component to render Login page view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Login = ({logIn }) => {\n    const navigate = useNavigate()\n\n    const [userName,setUserName] = useState(null)\n    const [password,setPassword] = useState(null)\n    const logInActionHandler = () => {\n        let useDetails = {\n            userName:userName,\n            password:password\n        }\n        let findUserNameIndex = logInCredentials.findIndex((user)=>user.userName === userName)\n        let findPasswordIndex = logInCredentials.findIndex((user)=>user.password === password)\n\n        if(findUserNameIndex > -1 && findPasswordIndex > -1)\n        {\n            logIn(useDetails)\n            navigate('/')\n        } else {\n\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"login-page-main-grid\">\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                    <Grid>\n                        <TextField \n                            label=\"Username\"\n                            value={userName}\n                            onChange={(e)=>{\n                                setUserName(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid className='login-btn'>\n                        <TextField \n                            type=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={(e)=>{\n                                setPassword(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid className='login-btn'>\n                        <Button color='primary' variant='outlined' onClick={()=>{\n                            logInActionHandler()\n                        }}\n                        disabled={userName!==null && password!==null ? false: true}\n                        >\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logIn: async (data) => {\n            return dispatch(await logInRequest(data))\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n","/home/omkar/Work/coding-challange/src/modules/Login/LoginReducer.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Login/LoginActions.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Login/LoginApiActions.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Content/components/FoodAppPage/FoodAppPage.js",["119","120"],[],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './FoodAppPage.css'\nimport { Box, Button, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom'\nimport Header from '../../../Header/Header';\nimport Footer from '../../../Footer/Footer';\n\n/**\n * Component to render FoodAppPage view\n * @returns {JSX.Element}\n * @constructor\n */\nconst FoodAppPage = ({loggenInUser }) => {\n    const navigate = useNavigate()\n\n\n    return (\n        <>\n            <Header />\n            <Box className='outer-box-style'>\n                <Box>\n                    <Typography className='welcome-text-style' align='center'>\n                        Welcome to Food's\n                    </Typography>\n                    <Typography className='welcome-text-style' align='center'>Kitchen</Typography>\n                </Box>\n                <Button size='small' variant='filled' className='go-to-menu-btn'\n                    onClick={() => {\n                        if(loggenInUser)\n                        {\n                            navigate('/menu');\n                        } else {\n                            navigate('/login');\n                        }\n                    }}\n                >\n                    Go to menu\n                </Button>\n            </Box>\n            <Footer />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        loggenInUser:state.LOG_IN.loggedInUser\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FoodAppPage);\n","/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/Foodtem.js",["121","122","123","124","125"],[],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Foodtem.css'\nimport { Box, Button, Card, Grid, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom'\nimport Header from '../../../Header/Header';\nimport Footer from '../../../Footer/Footer';\nimport feeds from '../../../feeds.json'\nimport Hamburger from '../../../../assets/burger.jpeg'\nimport Fries from '../../../../assets/fries.jpeg'\nimport Coke from '../../../../assets/coke.jpeg'\nimport Pepsi from '../../../../assets/pepsi.jpeg'\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\nimport {storeFoodItems} from './FoodItemApiActions'\n\n\n/**\n * Component to render Fooditem view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Foodtem = ({ loggenInUser, foodItemStore, foodItems }) => {\n    const navigate = useNavigate()\n    const images = [Hamburger,Fries,Coke,Pepsi]\n    const [isoldPriceIsSmaller,setisOldPriceSmaller] = useState({\n        isSmaller:false,\n        index:null\n    })\n    const [isCartEmpty,setIsCartEmpty] = useState(false)\n   useEffect(()=>{\n        if(images)\n        {\n            let data = Object.assign([], feeds)\n            images.map((img,imgIndex)=>{\n                data.map((item,itemIndex)=>{\n                    if(itemIndex===imgIndex)\n                    {\n                        item.image = img\n                        item.oldPrice = item.price\n                    } else {}\n                })\n            })\n            foodItemStore(data)\n        } else {}\n   },[])\n\n    const addItemHandler = (name) => {\n        let data = Object.assign([],foodItems)\n        let findIndex = data.findIndex((item)=> item.name === name)\n        let item = data[findIndex]\n        let increment\n        if(name === \"Hamburger\")\n        {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Fries\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Coke\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Pepsi\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else {\n\n        }\n        data[findIndex].price = increment\n        foodItemStore(data)\n    }\n\n    const deleteItemHandler = (name) => {\n        let data = Object.assign([],foodItems)\n        let findIndex = data.findIndex((item)=> item.name === name)\n        let item = data[findIndex]\n        let decreament\n        if(name === \"Hamburger\")\n        {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Fries\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Coke\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Pepsi\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else {\n\n        }\n        data[findIndex].price = decreament\n        let filteredData = data.filter((item)=> item.price > item.oldPrice)\n        if(filteredData&&filteredData.length === 0)\n        {\n            setIsCartEmpty(false)\n        } else {}\n        foodItemStore(data)\n        if( data[findIndex].price <= data[findIndex].oldPrice)\n        {\n            if(isoldPriceIsSmaller.isSmaller)\n            {\n                setisOldPriceSmaller({\n                    isSmaller:false,\n                    index:findIndex\n                })\n            } else {}\n        } else {}\n    }\n    \n    return (\n        <>\n            <Header />\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className='outer-grid'>\n                <Grid container className='inner-grid'>\n                    {\n                       foodItems && foodItems.map((item,itemIndex) => {\n                           if( item.price > item.oldPrice)\n                           {\n                                if(!isoldPriceIsSmaller.isSmaller)\n                                {\n                                    setisOldPriceSmaller({\n                                        isSmaller:true,\n                                        index:itemIndex\n                                    })\n                                } else {}\n                                if(!isCartEmpty)\n                                {\n                                    setIsCartEmpty(true)\n                                } else {}\n                           } else {}\n                            return (\n                                <Card className='item-card' key={itemIndex}>\n                                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"item-main-grid\">\n                                        <Grid container direction='row'>\n                                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                                <img src={item.image} className=\"image-style\"/>\n                                                <Box className='meta-info-style'>\n                                                    <Typography className='item-name-style'>{item.name}</Typography>\n                                                    <Typography className='item-price-style'>Price: {item.oldPrice}</Typography>\n                                                    {\n                                                        item.price > item.oldPrice\n                                                        ?\n                                                        <>\n                                                            <Typography className='item-price-style'>Total: {item.price/item.oldPrice}</Typography>\n                                                            <Typography className='item-price-style'>Cost(INR): {item.price}</Typography>\n                                                        </>\n                                                        :\n                                                        <></>\n                                                    }\n                                                </Box>\n                                                <Box className={isCartEmpty ? item.price > item.oldPrice ? 'item-action-style-box-on-price-small' : 'action-box-style' :'item-action-style-box'}>\n                                                    <Button size='small' variant='filled' className='go-to-menu-btn'\n                                                    onClick={()=>{\n                                                        addItemHandler(item.name)\n                                                    }}\n                                                    ><AddRoundedIcon/></Button>\n                                                    <Button \n                                                    className={item.price > item.oldPrice ? 'decrement-btn-style d-btn-color':'decrement-btn-style'}\n                                                    disabled={item.price > item.oldPrice ? false : true}\n                                                    onClick={()=>{\n                                                        deleteItemHandler(item.name)\n                                                    }}\n                                                    ><RemoveRoundedIcon/></Button>\n                                                </Box>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            )\n                        })\n                    }\n                </Grid>\n            </Grid>\n            <Footer />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        loggenInUser: state.LOG_IN.loggedInUser,\n        foodItems:state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        foodItemStore: async (data) => {\n            return dispatch(await storeFoodItems(data))\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Foodtem);\n",["126","127"],"/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemReducer.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemActions.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/FoodItemApiActions.js",[],[],"/home/omkar/Work/coding-challange/src/modules/Cart/Cart.js",["128","129","130","131"],[],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Cart.css'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, Typography } from '@material-ui/core';\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\nimport {storeFoodItems} from '../Content/components/FoodItems/FoodItemApiActions'\nimport { useNavigate } from 'react-router-dom'\nimport {clearFoodItemsRequest} from '../Content/components/FoodItems/FoodItemApiActions'\n\n\n/**\n * Component to cart view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Cart = ({ foodItems, open, closeDialogBox , foodItemStore, clearItemStore}) => {\n    const navigate = useNavigate()\n    const [isoldPriceIsSmaller,setisOldPriceSmaller] = useState({\n        isSmaller:false,\n        index:null\n    })\n    const addItemHandler = (name) => {\n        let data = Object.assign([],foodItems)\n        let findIndex = data.findIndex((item)=> item.name === name)\n        let item = data[findIndex]\n        let increment\n        if(name === \"Hamburger\")\n        {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Fries\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Coke\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Pepsi\") {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else {\n\n        }\n        data[findIndex].price = increment\n        foodItemStore(data)\n    }\n\n    const deleteItemHandler = (name) => {\n        let data = Object.assign([],foodItems)\n        let findIndex = data.findIndex((item)=> item.name === name)\n        let item = data[findIndex]\n        let decreament\n        if(name === \"Hamburger\")\n        {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Fries\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Coke\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else if (name === \"Pepsi\") {\n            decreament = parseInt(item.price) - parseInt(item.oldPrice)\n        } else {\n\n        }\n        data[findIndex].price = decreament\n        foodItemStore(data)\n        if( data[findIndex].price <= data[findIndex].oldPrice)\n        {\n            if(isoldPriceIsSmaller.isSmaller)\n            {\n                setisOldPriceSmaller({\n                    isSmaller:false,\n                    index:findIndex\n                })\n            } else {}\n        } else {}\n    }\n\n    let total =0;\n    foodItems && foodItems.map((item)=>{\n        if(item.price > item.oldPrice)\n        {\n            total = total + parseInt(item.price)\n        } else {}\n    })\n    return (\n        <div>\n            <Dialog\n                open={open}\n                fullWidth=\"md\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Order Summary</DialogTitle>\n                <DialogContent>\n                    {\n                        foodItems && foodItems.map((item)=>{\n                            if(item.price > item.oldPrice)\n                            {\n                                return (\n                                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                        <Grid container alignItems='center'>\n                                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                                <Grid container alignItems='center' className='cart-grid'>\n                                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                                                        <Typography>{item.name}:</Typography>\n                                                    </Grid>\n                                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                                                        <Typography>{(item.price/item.oldPrice)-1}</Typography>\n                                                    </Grid>\n                                                    <Grid item xs={5} sm={5} md={5} lg={5} xl={5}>\n                                                        <Button size='small' variant='filled' className='go-to-menu-btn'\n                                                        onClick={()=>{\n                                                            addItemHandler(item.name)\n                                                        }}\n                                                        ><AddRoundedIcon/></Button>\n                                                        <Button \n                                                        className={item.price > item.oldPrice ? 'decrement-btn-style d-btn-color':'decrement-btn-style'}\n                                                        disabled={item.price > item.oldPrice ? false : true}\n                                                        onClick={()=>{\n                                                            deleteItemHandler(item.name)\n                                                        }}\n                                                        ><RemoveRoundedIcon/></Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            } else {}\n                        })\n                    }\n                    <Typography>Total (INR) : {total} </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>{\n                        navigate('/checkout')\n                        clearItemStore()\n                    }} color=\"primary\" className='go-to-menu-btn'>\n                        SAVE AND CHECKOUT\n                    </Button>\n                    <Button onClick={closeDialogBox} color=\"primary\" autoFocus>\n                        CANCEL\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        foodItems: state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        foodItemStore: async (data) => {\n            return dispatch(await storeFoodItems(data))\n        },\n        clearItemStore: async (data) => {\n            return dispatch(await clearFoodItemsRequest(data))\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Cart);\n","/home/omkar/Work/coding-challange/src/modules/Checkout/Checkout.js",["132","133","134","135"],[],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Checkout.css'\nimport { Box, Button, Card, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom'\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\n\n\n/**\n * Component to render Checkout view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Checkout = ({loggenInUser }) => {\n    const navigate = useNavigate()\n\n\n    return (\n        <>\n            <Header />\n                <Box className='checkout-box'>\n                    <Card className='checkout-card'>\n                        <Typography variant='h4' align='center'>Checkout</Typography>\n                        <Typography align='left' className='thank-you-text'>Thank you for your order.</Typography>\n                    </Card>\n                </Box>\n            <Footer />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        loggenInUser:state.LOG_IN.loggedInUser\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Checkout);\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":12},{"ruleId":"142","severity":1,"message":"146","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":14},{"ruleId":"142","severity":1,"message":"147","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":13},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"142","severity":1,"message":"150","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":12,"column":17,"nodeType":"155","messageId":"156","endLine":12,"endColumn":20},{"ruleId":"142","severity":1,"message":"150","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"150","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"158","line":24,"column":11,"nodeType":"144","messageId":"145","endLine":24,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":35,"column":38,"nodeType":"161","messageId":"162","endLine":35,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":36,"column":42,"nodeType":"161","messageId":"162","endLine":36,"endColumn":44},{"ruleId":"163","severity":1,"message":"164","line":46,"column":6,"nodeType":"165","endLine":46,"endColumn":8,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":131,"column":49,"nodeType":"169","endLine":131,"endColumn":96},{"ruleId":"136","replacedBy":"170"},{"ruleId":"138","replacedBy":"171"},{"ruleId":"142","severity":1,"message":"150","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"172","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":82,"column":38,"nodeType":"161","messageId":"162","endLine":82,"endColumn":40},{"ruleId":"159","severity":1,"message":"173","line":97,"column":58,"nodeType":"161","messageId":"174","endLine":97,"endColumn":60},{"ruleId":"142","severity":1,"message":"150","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"175","line":4,"column":15,"nodeType":"144","messageId":"145","endLine":4,"endColumn":21},{"ruleId":"142","severity":1,"message":"158","line":16,"column":11,"nodeType":"144","messageId":"145","endLine":16,"endColumn":19},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Login' is defined but never used.",["176"],["177"],"'useEffect' is defined but never used.",["176"],["177"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useState' is defined but never used.","'navigate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'foodItemStore' and 'images'. Either include them or remove the dependency array. If 'foodItemStore' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["178"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["176"],["177"],"'DialogContentText' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [foodItemStore, images]",{"range":"181","text":"182"},[1617,1619],"[foodItemStore, images]"]