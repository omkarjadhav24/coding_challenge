{"ast":null,"code":"var _jsxFileName = \"/home/omkar/Work/coding-challange/src/modules/Cart/Cart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Cart.css';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, Typography } from '@material-ui/core';\n/**\n * Component to cart view\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = _ref => {\n  let {\n    foodItems,\n    open,\n    closeDialogBox\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: closeDialogBox,\n      fullWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: foodItems && foodItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 12,\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 12,\n                lg: 12,\n                xl: 12,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    sm: 3,\n                    md: 3,\n                    lg: 3,\n                    xl: 3,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: [item.name, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    sm: 3,\n                    md: 3,\n                    lg: 3,\n                    xl: 3,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: [item.price / item.oldPrice, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDialogBox,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDialogBox,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    foodItems: state.FOOD_ITEM.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Cart/Cart.js"],"names":["React","useEffect","useState","connect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Typography","Cart","foodItems","open","closeDialogBox","map","item","name","price","oldPrice","mapStateToProps","state","FOOD_ITEM","items","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Cart.css'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid, Typography } from '@material-ui/core';\n\n\n/**\n * Component to cart view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Cart = ({ foodItems, open, closeDialogBox }) => {\n\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={closeDialogBox}\n                fullWidth=\"md\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Order Summary</DialogTitle>\n                <DialogContent>\n                    {\n                        foodItems && foodItems.map((item)=>{\n                            return (\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                    <Grid container>\n                                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                            <Grid container>\n                                                <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                                                    <Typography>{item.name}:</Typography>\n                                                </Grid>\n                                                <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\n                                                    <Typography>{item.price/item.oldPrice}:</Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            )\n                        })\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialogBox} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={closeDialogBox} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        foodItems: state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}