{"ast":null,"code":"var _jsxFileName = \"/home/omkar/Work/coding-challange/src/modules/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport { logInRequest } from './LoginReducer';\n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {} = _ref;\n  const [userName, setUserName] = useState(null);\n  const [password, setPassword] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      className: \"login-page-main-grid\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            value: userName,\n            onChange: e => {\n              setUserName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            label: \"Password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"login-btn\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"SA/t4+hppZzsoicZLOES5In4RbE=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logInRequest: async tasklistId => {\n      return dispatch(await closeTasklistInProjectRequset(tasklistId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Login/Login.js"],"names":["Button","Grid","TextField","React","useEffect","useState","connect","logInRequest","Login","userName","setUserName","password","setPassword","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","tasklistId","closeTasklistInProjectRequset"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,aAAP;AACA,SACIC,YADJ,QAEO,gBAFP;AAIA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,KAAK,GAAG,QAAS;AAAA;;AAAA,MAAR,EAAQ;AAEnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,IAAD,CAAvC;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,EAAvC;AAA2C,MAAA,EAAE,EAAE,EAA/C;AAAmD,MAAA,SAAS,EAAC,sBAA7D;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,cAAc,EAAC,QAAlD;AAA2D,QAAA,UAAU,EAAC,QAAtE;AAAA,gCACI,QAAC,IAAD;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,UADV;AAEI,YAAA,KAAK,EAAEI,QAFX;AAGI,YAAA,QAAQ,EAAGI,CAAD,IAAK;AACXH,cAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAC,UAFV;AAGI,YAAA,KAAK,EAAEJ,QAHX;AAII,YAAA,QAAQ,EAAGE,CAAD,IAAK;AACXD,cAAAA,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAoBI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgCH,CApCD;;GAAMP,K;;KAAAA,K;;AAqCN,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHZ,IAAAA,YAAY,EAAE,MAAOa,UAAP,IAAsB;AAChC,aAAOD,QAAQ,CAAC,MAAME,6BAA6B,CAACD,UAAD,CAApC,CAAf;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAed,OAAO,CAClBU,eADkB,EAElBE,kBAFkB,CAAP,CAGbV,KAHa,CAAf","sourcesContent":["import { Button, Grid, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Login.css'\nimport {\n    logInRequest\n} from './LoginReducer'\n  \n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Login = ({ }) => {\n\n    const [userName,setUserName] = useState(null)\n    const [password,setPassword] = useState(null)\n    return (\n        <>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"login-page-main-grid\">\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                    <Grid>\n                        <TextField \n                            label=\"Username\"\n                            value={userName}\n                            onChange={(e)=>{\n                                setUserName(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid>\n                        <TextField \n                            type=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={(e)=>{\n                                setPassword(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid className='login-btn'>\n                        <Button color='primary' variant='outlined'>\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logInRequest: async (tasklistId) => {\n            return dispatch(await closeTasklistInProjectRequset(tasklistId))\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}