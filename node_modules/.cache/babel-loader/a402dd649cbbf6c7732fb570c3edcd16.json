{"ast":null,"code":"var _jsxFileName = \"/home/omkar/Work/coding-challange/src/modules/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RestaurantRoundedIcon from '@material-ui/icons/RestaurantRounded';\nimport { Badge, Grid } from '@material-ui/core';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport Cart from '../Cart/Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  headerName: {\n    marginLeft: '10px'\n  }\n}));\n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\n\nconst Header = _ref => {\n  _s();\n\n  let {\n    foodItems\n  } = _ref;\n  const [openCartDialogBox, setOpenCartDialogBox] = useState(false);\n\n  const openCartDialogBoxHandler = () => {\n    setOpenCartDialogBox(!openCartDialogBox);\n  };\n\n  const classes = useStyles();\n  let cartItemsCount = foodItems && foodItems.filter(item => item.price > item.oldPrice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(RestaurantRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.headerName,\n            children: \"Food's Restaurant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: [cartItemsCount ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                onClick: () => {\n                  openCartDialogBoxHandler();\n                },\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  badgeContent: cartItemsCount ? cartItemsCount.length : 0,\n                  color: \"error\",\n                  children: /*#__PURE__*/_jsxDEV(ShoppingCartRoundedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), openCartDialogBox ? /*#__PURE__*/_jsxDEV(Cart, {\n      open: openCartDialogBox,\n      closeDialogBox: () => {\n        setOpenCartDialogBox(!openCartDialogBox);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"90gXmGUPqjbyGdIw3Y7aM3Ob8+A=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\n\nconst mapStateToProps = state => {\n  return {\n    foodItems: state.FOOD_ITEM.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Header/Header.js"],"names":["React","useEffect","useState","connect","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","RestaurantRoundedIcon","Badge","Grid","ShoppingCartRoundedIcon","Cart","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","headerName","marginLeft","Header","foodItems","openCartDialogBox","setOpenCartDialogBox","openCartDialogBoxHandler","classes","cartItemsCount","filter","item","price","oldPrice","length","mapStateToProps","state","FOOD_ITEM","items","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RestaurantRoundedIcon from '@material-ui/icons/RestaurantRounded';\nimport { Badge, Grid } from '@material-ui/core';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport Cart from '../Cart/Cart';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    headerName:{\n        marginLeft:'10px'\n    }\n  }));\n\n  \n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Header = ({foodItems }) => {\n\n    const [openCartDialogBox,setOpenCartDialogBox] = useState(false)\n\n    const openCartDialogBoxHandler  = () => {\n        setOpenCartDialogBox(!openCartDialogBox)\n    }\n\n    const classes = useStyles();\n    let cartItemsCount = foodItems && foodItems.filter((item)=>item.price > item.oldPrice)\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <RestaurantRoundedIcon />  <Typography className={classes.headerName}>Food's Restaurant</Typography>\n                    </IconButton>\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                        <Grid container justifyContent='flex-end'>\n                            <Grid>\n                                {\n                                    cartItemsCount \n                                    ?\n                                    <></>\n                                    :\n                                    <></>\n                                }\n                                <Button color=\"inherit\" onClick={()=>{\n                                    openCartDialogBoxHandler()\n                                }}>\n                                    <Badge badgeContent={cartItemsCount ? cartItemsCount.length:0} color=\"error\">\n                                        <ShoppingCartRoundedIcon/>\n                                    </Badge>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            {\n                openCartDialogBox\n                ?\n                <Cart\n                open={openCartDialogBox}\n                closeDialogBox={()=>{\n                    setOpenCartDialogBox(!openCartDialogBox)\n                }}\n                />\n                :\n                <></>\n            }\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        foodItems:state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n"]},"metadata":{},"sourceType":"module"}