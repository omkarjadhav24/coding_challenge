{"ast":null,"code":"import _asyncToGenerator from\"/home/omkar/Work/coding-challange/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/omkar/Work/coding-challange/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/omkar/Work/coding-challange/node_modules/@babel/runtime/regenerator/index.js\";import{Button,Grid,TextField}from'@material-ui/core';import React,{useEffect,useState}from'react';import{connect}from'react-redux';import'./Login.css';import{logInRequest}from'./LoginApiActions';import logInCredentials from'../logInCredentials.json';import{useNavigate}from'react-router-dom';/**\n * Component to render Login page view\n * @returns {JSX.Element}\n * @constructor\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Login=function Login(_ref){var logIn=_ref.logIn;var navigate=useNavigate();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],setUserName=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var logInActionHandler=function logInActionHandler(){var useDetails={userName:userName,password:password};var findUserNameIndex=logInCredentials.findIndex(function(user){return user.userName===userName;});var findPasswordIndex=logInCredentials.findIndex(function(user){return user.password===password;});if(findUserNameIndex>-1&&findPasswordIndex>-1){logIn(useDetails);navigate('/');}else{}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,xl:12,className:\"login-page-main-grid\",children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(TextField,{label:\"Username\",value:userName,onChange:function onChange(e){setUserName(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{className:\"login-btn\",children:/*#__PURE__*/_jsx(TextField,{type:\"password\",label:\"Password\",value:password,onChange:function onChange(e){setPassword(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{className:\"login-btn\",children:/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:function onClick(){logInActionHandler();},disabled:userName!==null&&password!==null?false:true,children:\"Login\"})})]})})});};var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logIn:function(){var _logIn=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=dispatch;_context.next=3;return logInRequest(data);case 3:_context.t1=_context.sent;return _context.abrupt(\"return\",(0,_context.t0)(_context.t1));case 5:case\"end\":return _context.stop();}}},_callee);}));function logIn(_x){return _logIn.apply(this,arguments);}return logIn;}()};};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Login/Login.js"],"names":["Button","Grid","TextField","React","useEffect","useState","connect","logInRequest","logInCredentials","useNavigate","Login","logIn","navigate","userName","setUserName","password","setPassword","logInActionHandler","useDetails","findUserNameIndex","findIndex","user","findPasswordIndex","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Login.css'\nimport {\n    logInRequest\n} from './LoginApiActions'\nimport logInCredentials from '../logInCredentials.json'\nimport { useNavigate } from 'react-router-dom'\n\n\n/**\n * Component to render Login page view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Login = ({logIn }) => {\n    const navigate = useNavigate()\n\n    const [userName,setUserName] = useState(null)\n    const [password,setPassword] = useState(null)\n    const logInActionHandler = () => {\n        let useDetails = {\n            userName:userName,\n            password:password\n        }\n        let findUserNameIndex = logInCredentials.findIndex((user)=>user.userName === userName)\n        let findPasswordIndex = logInCredentials.findIndex((user)=>user.password === password)\n\n        if(findUserNameIndex > -1 && findPasswordIndex > -1)\n        {\n            logIn(useDetails)\n            navigate('/')\n        } else {\n\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"login-page-main-grid\">\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                    <Grid>\n                        <TextField \n                            label=\"Username\"\n                            value={userName}\n                            onChange={(e)=>{\n                                setUserName(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid className='login-btn'>\n                        <TextField \n                            type=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={(e)=>{\n                                setPassword(e.target.value)\n                            }}\n                        />\n                    </Grid>\n                    <Grid className='login-btn'>\n                        <Button color='primary' variant='outlined' onClick={()=>{\n                            logInActionHandler()\n                        }}\n                        disabled={userName!==null && password!==null ? false: true}\n                        >\n                            Login\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logIn: async (data) => {\n            return dispatch(await logInRequest(data))\n        },\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}