{"ast":null,"code":"import _slicedToArray from\"/home/omkar/Work/coding-challange/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{connect}from'react-redux';import'./Header.css';import{makeStyles}from'@material-ui/core/styles';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';import RestaurantRoundedIcon from'@material-ui/icons/RestaurantRounded';import{Badge,Grid}from'@material-ui/core';import ShoppingCartRoundedIcon from'@material-ui/icons/ShoppingCartRounded';import Cart from'../Cart/Cart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{flexGrow:1},menuButton:{marginRight:theme.spacing(2)},title:{flexGrow:1},headerName:{marginLeft:'10px'}};});/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */var Header=function Header(_ref){var foodItems=_ref.foodItems;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openCartDialogBox=_useState2[0],setOpenCartDialogBox=_useState2[1];var openCartDialogBoxHandler=function openCartDialogBoxHandler(){setOpenCartDialogBox(!openCartDialogBox);};var classes=useStyles();var cartItemsCount=foodItems&&foodItems.filter(function(item){return item.price>item.oldPrice;});return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsxs(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\",children:[/*#__PURE__*/_jsx(RestaurantRoundedIcon,{}),\"  \",/*#__PURE__*/_jsx(Typography,{className:classes.headerName,children:\"Food's Restaurant\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,xl:12,children:/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(Grid,{className:\"cart-icon-grid\",children:cartItemsCount&&cartItemsCount.length!==0?/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:function onClick(){openCartDialogBoxHandler();},children:/*#__PURE__*/_jsx(Badge,{badgeContent:cartItemsCount?cartItemsCount.length:0,color:\"error\",children:/*#__PURE__*/_jsx(ShoppingCartRoundedIcon,{style:{color:'black'}})})}):/*#__PURE__*/_jsx(_Fragment,{})})})})]})}),openCartDialogBox?/*#__PURE__*/_jsx(Cart,{open:openCartDialogBox,closeDialogBox:function closeDialogBox(){setOpenCartDialogBox(!openCartDialogBox);}}):/*#__PURE__*/_jsx(_Fragment,{})]});};var mapStateToProps=function mapStateToProps(state){return{foodItems:state.FOOD_ITEM.items};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{};};export default connect(mapStateToProps,mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Header/Header.js"],"names":["React","useEffect","useState","connect","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","RestaurantRoundedIcon","Badge","Grid","ShoppingCartRoundedIcon","Cart","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","headerName","marginLeft","Header","foodItems","openCartDialogBox","setOpenCartDialogBox","openCartDialogBoxHandler","classes","cartItemsCount","filter","item","price","oldPrice","length","color","mapStateToProps","state","FOOD_ITEM","items","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RestaurantRoundedIcon from '@material-ui/icons/RestaurantRounded';\nimport { Badge, Grid } from '@material-ui/core';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport Cart from '../Cart/Cart';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    headerName:{\n        marginLeft:'10px'\n    }\n  }));\n\n  \n/**\n * Component to render Action Station Lists and filters view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Header = ({foodItems }) => {\n\n    const [openCartDialogBox,setOpenCartDialogBox] = useState(false)\n\n    const openCartDialogBoxHandler  = () => {\n        setOpenCartDialogBox(!openCartDialogBox)\n    }\n\n    const classes = useStyles();\n    let cartItemsCount = foodItems && foodItems.filter((item)=>item.price > item.oldPrice)\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <RestaurantRoundedIcon />  <Typography className={classes.headerName}>Food's Restaurant</Typography>\n                    </IconButton>\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                        <Grid container justifyContent='flex-end'>\n                            <Grid className='cart-icon-grid'>\n                                {\n                                    cartItemsCount&&cartItemsCount.length !==0\n                                    ?\n                                    <Button color=\"inherit\" onClick={()=>{\n                                        openCartDialogBoxHandler()\n                                    }}>\n                                        <Badge badgeContent={cartItemsCount ? cartItemsCount.length:0} color=\"error\">\n                                            <ShoppingCartRoundedIcon style={{color:'black'}}/>\n                                        </Badge>\n                                    </Button>\n                                    :\n                                    <></>\n                                }\n                                \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            {\n                openCartDialogBox\n                ?\n                <Cart\n                open={openCartDialogBox}\n                closeDialogBox={()=>{\n                    setOpenCartDialogBox(!openCartDialogBox)\n                }}\n                />\n                :\n                <></>\n            }\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        foodItems:state.FOOD_ITEM.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n"]},"metadata":{},"sourceType":"module"}