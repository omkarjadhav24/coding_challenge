{"ast":null,"code":"var _jsxFileName = \"/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/Foodtem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Foodtem.css';\nimport { Box, Button, Card, Grid, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../../Header/Header';\nimport Footer from '../../../Footer/Footer';\nimport feeds from '../../../feeds.json';\nimport Hamburger from '../../../../assets/burger.jpeg';\nimport Fries from '../../../../assets/fries.jpeg';\nimport Coke from '../../../../assets/coke.jpeg';\nimport Pepsi from '../../../../assets/pepsi.jpeg';\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\n/**\n * Component to render Foodtem view\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Foodtem = _ref => {\n  _s();\n\n  let {\n    loggenInUser\n  } = _ref;\n  const navigate = useNavigate();\n  const images = [Hamburger, Fries, Coke, Pepsi];\n  const [items, setitems] = useState(feeds);\n  images.map((img, imgIndex) => {\n    feeds.map((item, itemIndex) => {\n      if (itemIndex === imgIndex) {\n        item.image = img;\n        item.oldPrice = item.price;\n      } else {}\n    });\n  });\n\n  const addItemHandler = name => {\n    let findIndex = feeds.findIndex(item => item.name === name);\n    let item = feeds[findIndex];\n    let increment;\n\n    if (name === \"Hamburger\") {\n      increment = parseInt(item.price) + parseInt(item.oldPrice);\n    } else if (name === \"Fries\") {} else if (name === \"Coke\") {} else if (name === \"Pepsi\") {} else {}\n\n    console.log(\"increment\", increment);\n    feeds[findIndex].price = increment;\n    console.log(\"feeds[findIndex]\", feeds[findIndex]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      className: \"outer-grid\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"inner-grid\",\n        children: feeds.map(item => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"item-card\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 12,\n              xl: 12,\n              className: \"item-main-grid\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  lg: 12,\n                  xl: 12,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image,\n                    className: \"image-style\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: \"meta-info-style\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: \"item-name-style\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: \"item-price-style\",\n                      children: [\"Price: \", item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: \"item-action-style-box\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      variant: \"filled\",\n                      className: \"go-to-menu-btn\",\n                      onClick: () => {\n                        addItemHandler(item.name);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(AddRoundedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 54\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"decrement-btn-style\",\n                      disabled: item.price > item.oldPrice ? false : true,\n                      children: /*#__PURE__*/_jsxDEV(RemoveRoundedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 54\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Foodtem, \"qJF9tcNfwSwS8gZz19/YC9zybaI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Foodtem;\n\nconst mapStateToProps = state => {\n  return {\n    loggenInUser: state.LOG_IN.loggedInUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foodtem);\n\nvar _c;\n\n$RefreshReg$(_c, \"Foodtem\");","map":{"version":3,"sources":["/home/omkar/Work/coding-challange/src/modules/Content/components/FoodItems/Foodtem.js"],"names":["React","useEffect","useState","connect","Box","Button","Card","Grid","Typography","useNavigate","Header","Footer","feeds","Hamburger","Fries","Coke","Pepsi","AddRoundedIcon","RemoveRoundedIcon","Foodtem","loggenInUser","navigate","images","items","setitems","map","img","imgIndex","item","itemIndex","image","oldPrice","price","addItemHandler","name","findIndex","increment","parseInt","console","log","mapStateToProps","state","LOG_IN","loggedInUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './Foodtem.css'\nimport { Box, Button, Card, Grid, Typography } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom'\nimport Header from '../../../Header/Header';\nimport Footer from '../../../Footer/Footer';\nimport feeds from '../../../feeds.json'\nimport Hamburger from '../../../../assets/burger.jpeg'\nimport Fries from '../../../../assets/fries.jpeg'\nimport Coke from '../../../../assets/coke.jpeg'\nimport Pepsi from '../../../../assets/pepsi.jpeg'\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\n\n/**\n * Component to render Foodtem view\n * @returns {JSX.Element}\n * @constructor\n */\nconst Foodtem = ({ loggenInUser }) => {\n    const navigate = useNavigate()\n    const images = [Hamburger,Fries,Coke,Pepsi]\n    const [items,setitems] = useState(feeds)\n  \n    images.map((img,imgIndex)=>{\n        feeds.map((item,itemIndex)=>{\n            if(itemIndex===imgIndex)\n            {\n                item.image = img\n                item.oldPrice = item.price\n            } else {}\n        })\n    })\n\n    const addItemHandler = (name) => {\n        let findIndex = feeds.findIndex((item)=> item.name === name)\n        let item = feeds[findIndex]\n        let increment\n        if(name === \"Hamburger\")\n        {\n            increment = parseInt(item.price) + parseInt(item.oldPrice)\n        } else if (name === \"Fries\") {\n\n        } else if (name === \"Coke\") {\n\n        } else if (name === \"Pepsi\") {\n\n        } else {\n\n        }\n        console.log(\"increment\",increment)\n        feeds[findIndex].price = increment\n        console.log(\"feeds[findIndex]\",feeds[findIndex])\n    }\n    \n    return (\n        <>\n            <Header />\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className='outer-grid'>\n                <Grid container className='inner-grid'>\n                    {\n                        feeds.map((item) => {\n                            return (\n                                <Card className='item-card'>\n                                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className=\"item-main-grid\">\n                                        <Grid container direction='row'>\n                                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                                                <img src={item.image} className=\"image-style\"/>\n                                                <Box className='meta-info-style'>\n                                                    <Typography className='item-name-style'>{item.name}</Typography>\n                                                    <Typography className='item-price-style'>Price: {item.price}</Typography>\n                                                </Box>\n                                                <Box className='item-action-style-box'>\n                                                    <Button size='small' variant='filled' className='go-to-menu-btn'\n                                                    onClick={()=>{\n                                                        addItemHandler(item.name)\n                                                    }}\n                                                    ><AddRoundedIcon/></Button>\n                                                    <Button \n                                                    className='decrement-btn-style'\n                                                    disabled={item.price > item.oldPrice ? false : true}\n                                                    ><RemoveRoundedIcon/></Button>\n                                                </Box>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Card>\n                            )\n                        })\n                    }\n                </Grid>\n            </Grid>\n            <Footer />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        loggenInUser: state.LOG_IN.loggedInUser\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Foodtem);\n"]},"metadata":{},"sourceType":"module"}